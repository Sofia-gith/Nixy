<%- include('partials/header', { title: 'P√°gina do Post' }) %>

    <div class="AlinhaForum">
        <!-- Menu lateral -->
        <aside class="menuLateral">
            <h3>Comunidades Populares</h3>
            <hr />
            <ul>
                <% if (comunidades && comunidades.length> 0) { %>
                    <% comunidades.forEach(com=> { %>
                        <li>
                            <a class="nomeComunidade" href="/comunidade/<%= com.ID_COMUNIDADE_T14 %>">
                                <div class="avatar_comunidade"></div>
                                <%= com.NOME_COMUNIDADE_T14 %>
                            </a>
                            <small>(<%= com.total_membros || 0 %> membros)</small>
                        </li>
                        <% }) %>
                            <% } else { %>
                                <li>Nenhuma comunidade encontrada</li>
                                <% } %>
            </ul>

            <button class="btn-criar-comunidade" onclick="mostrarFormularioComunidade()">
                + Nova Comunidade
            </button>
        </aside>

        <!-- Conte√∫do principal -->
        <main class="conteudoPrincipal">
          <%- include('partials/BarraDeBusca') %>
            <% if (error) { %>
                <div class="error-message">
                    <h2>
                        <%= error %>
                    </h2>
                    <a href="/Forum">Voltar ao f√≥rum</a>
                </div>


                <% } else if (post) { %>
                    <h2 class="tituloPost">
                        <%= post.titulo %>
                    </h2>


                    <div class="forum-info">
                        <div class="avatar"
                            style="background-image: url('<%= post.autor_foto ? `${post.autor_foto}?v=${Date.now()}` : '/img/default.png' %>');"
                            data-user-id="<%= post.autor_id %>">
                        </div>


                        <span>
                            <% if (post.forum) { %>
                                <%= post.forum %>
                                    <% } else { %>
                                        Geral
                                        <% } %>
                        </span>
                        <span class="autor">‚Ä¢ por <%= post.autor %></span>
                        <span class="data">‚Ä¢ <%= new Date(post.data).toLocaleDateString('pt-BR') %></span>
                    </div>

                    <div class="postCompleto">

                        <div class="conteudoPost">
                            <%- post.conteudo %>

                                <% if (post.arquivo) { %>
                                    <div class="arquivo-post">
                                        <a href="<%= post.arquivo %>" target="_blank">
                                            üìé Ver anexo
                                        </a>
                                    </div>
                                    <% } %>
                        </div>
                    </div>

                    <div class="acoesPost">

                        <button class="btn-avaliacao-positivo">
                            <img class="avaliarBtn" src="/imagens/gostar.png" alt="">
                            <span id="likes">
                                <%= post.likes || 0 %>
                            </span>
                        </button>


                        <button class="btn-avaliacao-negativo">
                            <img class="avaliarBtn" src="/imagens/nao-gosto.png" alt="">
                            <span id="dislikes">
                                <%= post.dislikes || 0 %>
                            </span>
                        </button>

                        <!-- para editar e excluir  -->

                        <% if (user && user.ID_USUARIO_T01===post.autor_id) { %>
                            <button class="btn-editar-post" onclick="abrirModalEdicao(<%= post.id %>)">
                                <img class="editarBtn" src="/imagens/lapis.png" alt="Editar post">
                            </button>
                            <button class="btn-deletar-post" onclick="confirmarDelecaoPost(<%= post.id %>)">
                                <img class="deletarBtn" src="/imagens/lixo.png" alt="Deletar post">
                            </button>
                            <% } %>

                    </div>

                    <!-- Coment√°rios -->

                    <div class="secaoComentarios">
                        <h3>Coment√°rios</h3>

                        <!-- Lista de coment√°rios -->
                        <div id="listaComentarios">
                            <% if (comentarios && comentarios.length> 0) { %>
                                <% comentarios.forEach(comentario=> { %>
                                    <div class="comentario" data-comentario-id="<%= comentario.id %>">
                                        <div class="comentarioAutor">
                                            <div class="avatar"
                                                style="background-image: url('<%= comentario.autor_foto || '/img/default.png' %>')">
                                            </div>
                                            <span class="nomeAutor">
                                                <%= comentario.autor %>
                                            </span>
                                            <span class="dataComentario">
                                                <%= new Date(comentario.data).toLocaleString('pt-BR') %>
                                            </span>
                                        </div>
                                        <div class="comentarioConteudo">
                                            <%= comentario.conteudo %>
                                        </div>

                                        <div class="comentarioAcoes">
                                            <% if (user && user.ID_USUARIO_T01===comentario.autor_id) { %>
                                                <button class="btn-editar-comentario"
                                                    onclick="editarComentario(<%= comentario.id %>)">Editar</button>
                                                <button class="btn-deletar-comentario"
                                                    onclick="deletarComentario(<%= comentario.id %>)">Deletar</button>
                                                <% } %>
                                                    <button class="btn-responder-comentario"
                                                        onclick="mostrarFormularioResposta(<%= comentario.id %>)">
                                                        Responder
                                                    </button>
                                        </div>

                                        <!-- Formul√°rio de resposta (inicialmente oculto) -->
                                        <div id="form-resposta-<%= comentario.id %>" class="form-resposta"
                                            style="display: none;">
                                            <textarea id="resposta-texto-<%= comentario.id %>"
                                                placeholder="Escreva sua resposta..."></textarea>
                                            <div class="acoes-resposta">
                                                <button class="btn-cancelar-resposta"
                                                    onclick="cancelarResposta(<%= comentario.id %>)">Cancelar</button>
                                                <button class="btn-enviar-resposta"
                                                    onclick="enviarResposta(<%= comentario.id %>)">Enviar</button>
                                            </div>
                                        </div>

                                        <!-- Container para as respostas -->
                                        <div id="respostas-<%= comentario.id %>" class="respostas-container"></div>
                                    </div>
                                    <% }) %>
                                        <% } else { %>
                                            <p>Nenhum coment√°rio ainda. Seja o primeiro a comentar!</p>
                                            <% } %>
                        </div>

                        <!-- Formul√°rio para novo coment√°rio -->
                        <div class="comentarioBox">
                            <div class="comentarioInputArea">
                                <textarea id="novoComentario" placeholder="Adicione um coment√°rio..."></textarea>
                            </div>
                            <div class="comentarioAcoesDireita">
                                <button class="cancelarBtn" onclick="cancelarComentario()">Cancelar</button>
                                <button class="comentarBtn" onclick="enviarComentario(<%= post.id %>)">Comentar</button>
                            </div>
                        </div>
                    </div>
                    <% } else { %>
                        <div class="error-message">
                            <h2>Post n√£o dispon√≠vel</h2>
                            <a href="/Forum">Voltar ao f√≥rum</a>
                        </div>
                        <% } %>
        </main>

        <aside class="infoForum">
            <% if (post) { %>
                <h4>
                    <% if (post.forum) { %>
                        c/<%= post.forum %>
                            <% } else { %>
                                Geral
                                <% } %>
                </h4>
                <% if (post.comunidade_descricao) { %>
                    <p>
                        <%= post.comunidade_descricao %>
                    </p>
                    <% } %>
                        <hr />
                        <div class="autorPost">
                            <div class="avatar"
                                style="background-image: url('<%= post.autor_foto ? `${post.autor_foto}?v=${Date.now()}` : '/img/default.png' %>');">
                            </div>
                            <span>
                                <%= post.autor %>
                            </span>
                        </div>
                        <% } else { %>
                            <h4>Informa√ß√µes n√£o dispon√≠veis</h4>
                            <p>Este post n√£o existe ou foi removido</p>
                            <% } %>
        </aside>



        <script>
            function expandirComentario() {
                const box = document.querySelector('.comentarioBox');
                box.classList.add('ativo');
                document.getElementById('novoComentario').focus();
            }


            document.getElementById('novoComentario').addEventListener('focus', expandirComentario);
            document.getElementById('novoComentario').addEventListener('click', expandirComentario);


            function cancelarComentario() {
                const box = document.querySelector('.comentarioBox');
                const textarea = box.querySelector('textarea');
                textarea.value = "";
                box.classList.remove('ativo');
            }

            function verificarFechamento(textarea) {
                // se o conte√∫do estiver vazio ap√≥s desfocar, esconde tudo
                setTimeout(() => {
                    if (textarea.value.trim() === "") {
                        cancelarComentario();
                    }
                }, 100);
            }


            // fun√ß√£o para deletar

            async function confirmarDelecaoPost(postId) {
                const confirmacao = confirm('Tem certeza que deseja deletar este post? Esta a√ß√£o n√£o pode ser desfeita.');

                if (confirmacao) {
                    try {
                        const response = await fetch(`/post/${postId}`, {
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json',
                                // Adicione o token CSRF se estiver usando
                                // 'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
                            },
                            credentials: 'include' // Para enviar cookies de sess√£o
                        });

                        if (!response.ok) {
                            const errorData = await response.json();
                            throw new Error(errorData.erro || 'Erro ao deletar post');
                        }

                        const data = await response.json();
                        alert(data.mensagem || 'Post deletado com sucesso!');
                        window.location.href = '/Forum'; // Redireciona para o f√≥rum

                    } catch (error) {
                        console.error('Erro:', error);
                        alert(error.message || 'Erro ao conectar com o servidor');
                    }
                }
            }

            // Fun√ß√£o para abrir o modal de edi√ß√£o
            function abrirModalEdicao(postId) {
                const modal = document.getElementById('modalEdicao');
                const postIdInput = document.getElementById('postIdEdicao');
                const tituloInput = document.getElementById('tituloEdicao');
                const conteudoInput = document.getElementById('conteudoEdicao');
                const forumSelect = document.getElementById('forumEdicao');

                // Preenche os campos com os dados atuais do post
                postIdInput.value = postId;
                tituloInput.value = document.querySelector('.tituloPost').textContent.trim();
                conteudoInput.value = document.querySelector('.conteudoPost').textContent.trim();

                // Define o f√≥rum selecionado, se houver
                const forumAtual = document.querySelector('.forum-info span').textContent.trim();
                if (forumAtual && forumAtual !== 'Geral') {
                    forumSelect.value = forumAtual;
                } else {
                    forumSelect.value = '';
                }

                modal.style.display = 'block';
            }

            // Fun√ß√£o para fechar o modal
            function fecharModalEdicao() {
                document.getElementById('modalEdicao').style.display = 'none';
            }

            // Evento de submit do formul√°rio de edi√ß√£o
            ocument.getElementById('formEdicaoPost').addEventListener('submit', async function (e) {
                e.preventDefault();

                const postId = document.getElementById('postIdEdicao').value;
                const titulo = document.getElementById('tituloEdicao').value;
                const conteudo = document.getElementById('conteudoEdicao').value;
                const forum = document.getElementById('forumEdicao').value;
                const userId = '<%= user.ID_USUARIO_T01 %>';

                try {
                    const response = await fetch(`/post/${postId}`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        credentials: 'include',
                        body: JSON.stringify({
                            TITULO_POST_T05: titulo,
                            CONTEUDO_POST_T05: conteudo,
                            CATEGORIA_POST_T05: forum || null,
                            ID_USUARIO_T01: userId
                        })
                    });

                    if (!response.ok) {
                        const errorData = await response.json();
                        throw new Error(errorData.erro || 'Erro ao atualizar post');
                    }

                    const data = await response.json();
                    alert('Post atualizado com sucesso!');
                    window.location.reload();

                } catch (error) {
                    console.error('Erro:', error);
                    alert(error.message || 'Erro ao conectar com o servidor');
                }
            });

            // Fecha o modal se clicar fora dele
            window.onclick = function (event) {
                const modal = document.getElementById('modalEdicao');
                if (event.target === modal) {
                    fecharModalEdicao();


                }
            }



            // Fun√ß√µes para manipula√ß√£o de coment√°rios
            async function enviarComentario(postId) {
                const conteudo = document.getElementById('novoComentario').value.trim();
                const userId = '<%= user.ID_USUARIO_T01 %>';

                if (!conteudo) {
                    alert('Por favor, digite um coment√°rio');
                    return;
                }

                try {
                    const response = await fetch('/comentario', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            ID_POST_T05: postId,
                            ID_USUARIO_T01: userId,
                            CONTEUDO_COMENTARIO_T06: conteudo
                        })
                    });

                    if (!response.ok) {
                        const errorData = await response.json();
                        throw new Error(errorData.erro || 'Erro ao enviar coment√°rio');
                    }

                    // Recarrega os coment√°rios
                    await carregarComentarios(postId);
                    document.getElementById('novoComentario').value = '';

                } catch (error) {
                    console.error('Erro:', error);
                    alert(error.message || 'Erro ao enviar coment√°rio');
                }
            }

            async function carregarComentarios(postId) {
                try {
                    const response = await fetch(`/post/${postId}/comentarios`);

                    if (!response.ok) {
                        throw new Error('Erro ao carregar coment√°rios');
                    }

                    const comentarios = await response.json();
                    const listaComentarios = document.getElementById('listaComentarios');

                    // Atualiza a lista de coment√°rios
                    listaComentarios.innerHTML = comentarios.map(comentario => `
            <div class="comentario" data-comentario-id="${comentario.id}">
                <div class="comentarioAutor">
                    <div class="avatar" 
                         style="background-image: url('${comentario.autor_foto || '/img/default.png'}')">
                    </div>
                    <span class="nomeAutor">${comentario.autor}</span>
                    <span class="dataComentario">${new Date(comentario.data).toLocaleString('pt-BR')}</span>
                </div>
                <div class="comentarioConteudo">${comentario.conteudo}</div>
                
                ${comentario.autor_id == '<%= user.ID_USUARIO_T01 %>' ? `
                    <div class="comentarioAcoes">
                        <button class="btn-editar-comentario" onclick="editarComentario(${comentario.id})">Editar</button>
                        <button class="btn-deletar-comentario" onclick="deletarComentario(${comentario.id})">Deletar</button>
                    </div>
                ` : ''}
            </div>
        `).join('');

                } catch (error) {
                    console.error('Erro ao carregar coment√°rios:', error);
                }
            }

            async function editarComentario(comentarioId) {
                const comentarioDiv = document.querySelector(`.comentario[data-comentario-id="${comentarioId}"]`);
                const conteudoAtual = comentarioDiv.querySelector('.comentarioConteudo').textContent;

                // Cria um textarea para edi√ß√£o
                comentarioDiv.querySelector('.comentarioConteudo').innerHTML = `
        <textarea id="editarComentario-${comentarioId}" style="width:100%; min-height:80px;">${conteudoAtual}</textarea>
        <div>
            <button onclick="salvarEdicaoComentario(${comentarioId})">Salvar</button>
            <button onclick="cancelarEdicaoComentario(${comentarioId}, '${conteudoAtual}')">Cancelar</button>
        </div>
    `;
            }

            async function salvarEdicaoComentario(comentarioId) {
                const novoConteudo = document.getElementById(`editarComentario-${comentarioId}`).value.trim();
                const userId = '<%= user.ID_USUARIO_T01 %>';

                if (!novoConteudo) {
                    alert('O coment√°rio n√£o pode estar vazio');
                    return;
                }

                try {
                    const response = await fetch(`/comentario/${comentarioId}`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            CONTEUDO_COMENTARIO_T06: novoConteudo,
                            ID_USUARIO_T01: userId
                        })
                    });

                    if (!response.ok) {
                        const errorData = await response.json();
                        throw new Error(errorData.erro || 'Erro ao atualizar coment√°rio');
                    }

                    // Recarrega os coment√°rios
                    const postId = '<%= post.id %>';
                    await carregarComentarios(postId);

                } catch (error) {
                    console.error('Erro:', error);
                    alert(error.message || 'Erro ao atualizar coment√°rio');
                }
            }

            function cancelarEdicaoComentario(comentarioId, conteudoOriginal) {
                const comentarioDiv = document.querySelector(`.comentario[data-comentario-id="${comentarioId}"]`);
                comentarioDiv.querySelector('.comentarioConteudo').textContent = conteudoOriginal;
            }

            async function deletarComentario(comentarioId) {
                if (!confirm('Tem certeza que deseja deletar este coment√°rio?')) {
                    return;
                }

                const userId = '<%= user.ID_USUARIO_T01 %>';

                try {
                    const response = await fetch(`/comentario/${comentarioId}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            ID_USUARIO_T01: userId
                        })
                    });

                    if (!response.ok) {
                        const errorData = await response.json();
                        throw new Error(errorData.erro || 'Erro ao deletar coment√°rio');
                    }

                    // Recarrega os coment√°rios
                    const postId = '<%= post.id %>';
                    await carregarComentarios(postId);

                } catch (error) {
                    console.error('Erro:', error);
                    alert(error.message || 'Erro ao deletar coment√°rio');
                }
            }

            // Carrega os coment√°rios quando a p√°gina √© carregada
            document.addEventListener('DOMContentLoaded', () => {
                const postId = '<%= post.id %>';
                if (postId) {
                    carregarComentarios(postId);
                }
            });



            // aqui eu vou colocar a resposta dos comentarios



            // Adicione esta fun√ß√£o para mostrar/ocultar respostas
            function toggleRespostas(comentarioId) {
                const respostasContainer = document.getElementById(`respostas-${comentarioId}`);
                const btnRespostas = document.getElementById(`btn-respostas-${comentarioId}`);

                if (respostasContainer.style.display === 'none' || !respostasContainer.style.display) {
                    carregarRespostas(comentarioId);
                    btnRespostas.textContent = 'Ocultar respostas';
                } else {
                    respostasContainer.style.display = 'none';
                    btnRespostas.textContent = 'Ver respostas';
                }
            }

            // Fun√ß√£o para carregar respostas
            async function carregarRespostas(comentarioId) {
                try {
                    const response = await fetch(`/comentario/${comentarioId}/respostas`);
                    const respostas = await response.json();

                    const respostasContainer = document.getElementById(`respostas-${comentarioId}`);
                    respostasContainer.innerHTML = '';

                    if (respostas.length > 0) {
                        respostas.forEach(resposta => {
                            const respostaElement = document.createElement('div');
                            respostaElement.className = 'resposta-comentario';
                            respostaElement.innerHTML = `
                    <div class="info-resposta">
                        <div class="avatar-resposta" style="background-image: url('${resposta.autor_foto || '/img/default.png'}')"></div>
                        <span class="autor-resposta">${resposta.autor}</span>
                        <span class="data-resposta">‚Ä¢ ${new Date(resposta.data).toLocaleDateString('pt-BR')}</span>
                    </div>
                    <div class="conteudo-resposta">${resposta.conteudo}</div>
                `;
                            respostasContainer.appendChild(respostaElement);
                        });
                    } else {
                        respostasContainer.innerHTML = '<p class="sem-respostas">Nenhuma resposta ainda.</p>';
                    }

                    respostasContainer.style.display = 'block';

                    // Adiciona formul√°rio para nova resposta
                    const formResposta = document.createElement('div');
                    formResposta.className = 'form-resposta';
                    formResposta.innerHTML = `
            <textarea id="resposta-texto-${comentarioId}" placeholder="Escreva sua resposta..."></textarea>
            <button onclick="enviarResposta(${comentarioId})">Responder</button>
        `;
                    respostasContainer.appendChild(formResposta);

                } catch (error) {
                    console.error('Erro ao carregar respostas:', error);
                }
            }
            // Fun√ß√£o para enviar resposta
            // Mostrar formul√°rio de resposta
            function mostrarFormularioResposta(comentarioId) {
                const formResposta = document.getElementById(`form-resposta-${comentarioId}`);
                formResposta.style.display = 'block';

                // Foca no textarea
                document.getElementById(`resposta-texto-${comentarioId}`).focus();
            }

            // Cancelar resposta
            function cancelarResposta(comentarioId) {
                const formResposta = document.getElementById(`form-resposta-${comentarioId}`);
                formResposta.style.display = 'none';
                document.getElementById(`resposta-texto-${comentarioId}`).value = '';
            }

            // Enviar resposta
            async function enviarResposta(comentarioId) {
                const texto = document.getElementById(`resposta-texto-${comentarioId}`).value.trim();

                if (!texto) {
                    alert('Por favor, escreva uma resposta');
                    return;
                }

                try {
                    const response = await fetch('/resposta-comentario', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            ID_COMENTARIO_T06: comentarioId,
                            ID_USUARIO_T01: <%= user.ID_USUARIO_T01 %>,
                            CONTEUDO_RESPOSTA_T07: texto
                        })
                    });

                    if (!response.ok) {
                        throw new Error('Erro ao enviar resposta');
                    }

                    // Limpa o formul√°rio
                    document.getElementById(`resposta-texto-${comentarioId}`).value = '';

                    // Esconde o formul√°rio
                    document.getElementById(`form-resposta-${comentarioId}`).style.display = 'none';

                    // Recarrega as respostas
                    await carregarRespostas(comentarioId);

                } catch (error) {
                    console.error('Erro ao enviar resposta:', error);
                    alert('Erro ao enviar resposta: ' + error.message);
                }
            }

            // Carregar respostas de um coment√°rio
            async function carregarRespostas(comentarioId) {
                try {
                    const response = await fetch(`/comentario/${comentarioId}/respostas`);
                    const respostas = await response.json();

                    const container = document.getElementById(`respostas-${comentarioId}`);
                    container.innerHTML = '';

                    if (respostas.length > 0) {
                        respostas.forEach(resposta => {
                            const respostaHTML = `
                    <div class="resposta-comentario">
                        <div class="info-resposta">
                            <div class="avatar-resposta" 
                                 style="background-image: url('${resposta.autor_foto || '/img/default.png'}')"></div>
                            <span class="autor-resposta">${resposta.autor}</span>
                            <span class="data-resposta">
                                ${new Date(resposta.data).toLocaleString('pt-BR')}
                            </span>
                        </div>
                        <div class="conteudo-resposta">${resposta.conteudo}</div>
                    </div>
                `;
                            container.insertAdjacentHTML('beforeend', respostaHTML);
                        });
                    }
                } catch (error) {
                    console.error('Erro ao carregar respostas:', error);
                }
            }

        </script>

        <div id="modalEdicao" class="modalPost">
            <div class="modal-conteudo-post">
                <span class="fechar-modal-post" onclick="fecharModalEdicao()">&times;</span>
                <h2>Editar Postagem</h2>
                <form id="formEdicaoPost">
                    <input type="hidden" id="postIdEdicao" value="">

                    <div class="form-group">
                        <label for="tituloEdicao">T√≠tulo:</label>
                        <input type="text" id="tituloEdicao" required>
                    </div>

                    <div class="form-group">
                        <label for="conteudoEdicao">Conte√∫do:</label>
                        <textarea id="conteudoEdicao" rows="10" required></textarea>
                    </div>

                    <div class="form-group">
                        <label for="forumEdicao">F√≥rum:</label>
                        <select id="forumEdicao">
                            <option value="">Geral</option>
                            <% if (comunidades && comunidades.length> 0) { %>
                                <% comunidades.forEach(com=> { %>
                                    <option value="<%= com.NOME_COMUNIDADE_T14 %>">c/<%= com.NOME_COMUNIDADE_T14 %>
                                    </option>
                                    <% }) %>
                                        <% } %>
                        </select>
                    </div>

                    <div class="acoes-modal">
                        <button type="button" class="btn-cancelar" onclick="fecharModalEdicao()">Cancelar</button>
                        <button type="submit" class="btn-salvar">Salvar Altera√ß√µes</button>


                    </div>








                </form>
            </div>
        </div>
    </div>